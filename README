Requires Paperclip and Active Record.

This is the bestest way to handle file uploads/downloads using Active Resource. Rather than trying to create a multipart request, it just embeds the file's binary data in the submitted or downloaded XML.

Adds a class method called "encode_attachment_in_xml" to Active Record that can be used alongside Paperclip's "has_attached_file" to automatically generate useful and usable binary XML tags for the attachment's original file. These tags will automatically be parsed by Active Record and Active Resource to create files. Be sure to also  set #{attachment_name}_content_type and #{attachment_name}_file_name in your Active Resource so that Paperclip handles saving the file correctly.

I use by storing in lib and requiring 'lib/encoded_attachment' at the bottom of my application.rb. Because I'm too lazy to make a plugin right now.

---

Copyright (c) 2010 Nick Ragaz

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.